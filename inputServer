import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.net.Socket;
import java.time.LocalTime;

import javax.swing.JScrollBar;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;

public class inputServer extends Thread{

	Socket clientSocket;
	JTextArea textArea;	
	JScrollBar pane;
	public inputServer(JTextArea textArea, JScrollBar pane_max, Socket accept){
		clientSocket = accept;
		this.textArea = textArea;
		this.pane = pane_max;
	}
	
	public void run(){
		

		try( 
				PrintWriter out =
				new PrintWriter(clientSocket.getOutputStream(), true);
		
		BufferedReader in =
				new BufferedReader(new InputStreamReader(clientSocket.getInputStream()));
		
		BufferedReader inStd =
				new BufferedReader(new InputStreamReader(System.in));
		

			
		
		
		
		) {

			java.time.LocalTime time 
								= LocalTime.now();

			String text;
			out.println("Uspostavljena konekcija!");
			if ( !clientSocket.isClosed())
			while( (text = in.readLine()) != null){

				textArea.append(
						time.getHour() + ":" +
						time.getMinute() + ":" +
						time.getSecond() + "  On: "
								+ text+"\n");
				textArea.update(textArea.getGraphics());
				
				pane.setValue(pane.getMaximum());

			}
			
			
			
			
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		finally {
			try {
				
				clientSocket.close();
				textArea.append("Connection lost!"+"\n");
				textArea.update(textArea.getGraphics());
			} catch (IOException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}
		

	}
	
}
